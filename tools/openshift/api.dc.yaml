---
apiVersion: v1
kind: Template
labels:
  template: "${REPO_NAME}-template"
metadata:
  name: "${REPO_NAME}-${JOB_NAME}-dc"
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "${APP_NAME}-${JOB_NAME}"
      name: "${APP_NAME}-${JOB_NAME}"
    spec:
      replicas: ${{MIN_REPLICAS}}
      selector:
        app: "${APP_NAME}-${JOB_NAME}"
        deploymentConfig: "${APP_NAME}-${JOB_NAME}"
      strategy:
        resources: {}
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/generated-by: pendemogmigrationapi
            prometheus.io/path: /actuator/prometheus
            prometheus.io/port: '8080'
            prometheus.io/scrape: 'true'
          labels:
            app: "${APP_NAME}-${JOB_NAME}"
            deploymentConfig: "${APP_NAME}-${JOB_NAME}"
        spec:
          containers:
            - image: docker-registry.default.svc:5000/${NAMESPACE}/${REPO_NAME}-${JOB_NAME}:${TAG}
              imagePullPolicy: Always
              volumeMounts:
              - name: tls-certs
                mountPath: "/etc/tls-certs"
                readOnly: true
              readinessProbe:
                tcpSocket:
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 5
                failureThreshold: 30
                successThreshold: 1
              livenessProbe:
                httpGet:
                  path: /actuator/health
                  port: 8080
                initialDelaySeconds: 300
                periodSeconds: 15
                timeoutSeconds: 5
                failureThreshold: 5
                successThreshold: 1
              name: "${APP_NAME}-${JOB_NAME}"
              ports:
                - containerPort: ${{CONTAINER_PORT}}
                  protocol: TCP
              resources:
                requests:
                  cpu: "${MIN_CPU}"
                  memory: "${MIN_MEM}"
                limits:
                  cpu: "${MAX_CPU}"
                  memory: "${MAX_MEM}"
          volumes:
            - name: tls-certs
              secret:
                secretName: pen-demog-migration-api-cert
      test: false
      triggers:
        - type: ConfigChange

parameters:
  - name: REPO_NAME
    description: Application repository name
    required: true
  - name: JOB_NAME
    description: Job identifier (i.e. 'backend' OR 'frontend')
    required: true
  - name: NAMESPACE
    description: Target namespace reference (i.e. 'k8vopl-dev')
    required: true
  - name: APP_NAME
    description: Application name
    required: true
  - name: HOST_ROUTE
    description: The host the route will use to expose service outside cluster
    required: true
  - name: CONTAINER_PORT
    description: The port on which the application will be accessible
    value: "8080"
    required: false
  - name: TAG
    description: The identifying tag for this specific deployment
    required: true
  - name: HOST_PATH
    description: The path appended to the HOST_ROUTE where the root of this project will be served
    value: "/"
    required: false
  - name: MIN_REPLICAS
    description: The minimum amount of replicas
    required: true
  - name: MAX_REPLICAS
    description: The maximum amount of replicas
    required: true
  - name: MIN_CPU
    description: The minimum amount of cpu
    required: true
  - name: MAX_CPU
    description: The maximum amount of cpu
    required: true
  - name: MIN_MEM
    description: The minimum amount of memory
    required: true
  - name: MAX_MEM
    description: The maximum amount of memory
    required: true
